#include <stdio.h>
#include <string.h>

#define STR_LTH 26

char decrypt(char *wrd, int key, char a, char b,char c,char d,char e,char f,char g,char h,char i,char j,char k,char l,char m,char n,char o,char p,char q,char r,char s,char t,char u,char v,char w,char x,char y,char z,char A,char B,char C,char D,char E,char F,char G,char H,char I,char J,char K,char L,char M,char N,char O,char P,char Q,char R,char S,char T,char U,char V,char W,char X,char Y,char Z); 

int main() 
{
    int key=0;
    char A=65,B=66,C=67,D=68,E=69,F=70,G=71,H=72,I=73,J=74,K=75,L=76,M=77,N=78,O=79,P=80,Q=81,R=82,S=83,T=84,U=85,V=86,W=87,X=88,Y=89,Z=90;
    char a=65,b=66,c=67,d=68,e=69,f=70,g=71,h=72,i=73,j=74,k=75,l=76,m=77,n=78,o=79,p=80,q=81,r=82,s=83,t=84,u=85,v=86,w=87,x=88,y=89,z=90;
    FILE *EncryptedText;                                //sets a pointer to the file TextToEncrypt
    EncryptedText=fopen("EncryptedText.txt","r");       //opens and reads the file
    FILE *DecryptedText;
    DecryptedText=fopen("DecryptedText.txt","w");
    char wrd[STR_LTH]; 
          
    while(!feof(EncryptedText))
    {
        fscanf(EncryptedText,"%s",wrd);
        if(strlen(wrd)==1)
        {
            A=wrd[0];
        }
        if(strlen(wrd)==3 && wrd[0]==A)
        {
            N=wrd[1];
            D=wrd[2];
        }
        if(strlen(wrd)==3 && wrd[0]!=A)
        {
            T=wrd[0];
            H=wrd[1];
            E=wrd[2];
        }
        if(strlen(wrd)==2 && wrd[0]==T)
        {
           O=wrd[1];
        }
        if(strlen(wrd)==2 && wrd[1]==O)
        {
            F=wrd[1];
        }
        if(strlen(wrd)==4 && wrd[0]==H && wrd[1]==A && wrd[3]==E)
        {
            V=wrd[2];
        }
        if(strlen(wrd)==2 && wrd[0]!=A && wrd[1]==T)
        {
            I=wrd[0];
        }
        if(strlen(wrd)==2 && wrd[1]==E)
        {
            B=wrd[0];
        }
        if(strlen(wrd)==4 && wrd[1]==I && wrd[2]==T && wrd[3]==H)
        {
            W=wrd[0];
        }
        if(strlen(wrd)==2 && wrd[0]==A)
        {
            S=wrd[1];
        }
        if(strlen(wrd)==3 && wrd[1]==O)
        {
            Y=wrd[0];
            U=wrd[2];
        }
        if(strlen(wrd)==3 && wrd[0]==F && wrd[1]==O)
        {
            R=wrd[2];
        }
    }
    printf("%c  =>  A\n%c  =>  B\n%c  =>  C\n%c  =>  D\n%c  =>  E\n%c  =>  F\n%c  =>  G\n%c  =>  H\n%c  =>  I\n%c  =>  J\n%c  =>  K\n%c  =>  L\n%c  =>  M\n%c  =>  N\n%c  =>  O\n%c  =>  P\n%c  =>  Q\n%c  =>  R\n%c  =>  S\n%c  =>  T\n%c  =>  U\n%c  =>  V\n%c  =>  W\n%c  =>  X\n%c  =>  Y\n%c  =>  Z",A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z);
    printf("\n\n");
    fclose(EncryptedText);                              //closes file
    fclose(DecryptedText); 
    EncryptedText=fopen("EncryptedText.txt","r");
    DecryptedText=fopen("DecryptedText.txt","w");
    if(key==0)
    {
        while(!feof(EncryptedText))                         // makes a loop so that while the file is still going
        {
            fscanf(EncryptedText,"%s",wrd);                 //reads a word in the file then stores it in a string
            decrypt(wrd, key, a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z);                             //calls function to that string       
            printf("%s ",wrd);                              //prints the encrypted text to the console
            fprintf(DecryptedText, "%s ",wrd);              //prints encrypted text to the file EncryptedText
        }
    printf("\n");
    fclose(EncryptedText);                              //closes file
    fclose(DecryptedText);   
    }
    else
    {
        printf("Try again using a non-zero number\n");
    }

  return 0;
}	

char decrypt(char *wrd, int key, char a,char b,char c,char d,char e,char f,char g,char h,char i,char j,char k,char l,char m,char n,char o,char p,char q,char r,char s,char t,char u,char v,char w,char x,char y,char z,char A,char B,char C,char D,char E,char F,char G,char H,char I,char J,char K,char L,char M,char N,char O,char P,char Q,char R,char S,char T,char U,char V,char W,char X,char Y,char Z)

{
    int count=0;                                            //declares i as an int
 
    for(count = 0;count < STR_LTH;count++)                          //for thr length of the string 
    {
        
       if(wrd[count]==A)
        {
            wrd[count]=65;
        }
        if(wrd[count]==B)
        {
            wrd[count]=b;
        }
        if(wrd[count]==C)
        {
            wrd[count]=c;
        }
        if(wrd[count]==D)
        {
            wrd[count]=d;
        }
        if(wrd[count]==E)
        {
            wrd[count]=e;
        }
        if(wrd[count]==F)
        {
            wrd[count]=f;
        }
        if(wrd[count]==G)
        {
            wrd[count]=g;
        }
        if(wrd[count]==H)
        {
            wrd[count]=h;
        }
        if(wrd[count]==I)
        {
            wrd[count]=i;
        }
        if(wrd[count]==J)
        {
            wrd[count]=j;
        }
        if(wrd[count]==K)
        {
            wrd[count]=k;
        }
        if(wrd[count]==L)
        {
            wrd[count]=l;
        }
        if(wrd[count]==M)
        {
            wrd[count]=m;
        }
        if(wrd[count]==N)
        {
            wrd[count]=n;
        }
        if(wrd[count]==O)
        {
            wrd[count]=o;
        }
        if(wrd[count]==P)
        {
            wrd[count]=p;
        }
        if(wrd[count]==Q)
        {
            wrd[count]=q;
        }
        if(wrd[count]==R)
        {
            wrd[count]=r;
        }
        if(wrd[count]==S)
        {
            wrd[count]=s;
        }
        if(wrd[count]==T)
        {
            wrd[count]=t;
        }
        if(wrd[count]==U)
        {
            wrd[count]=u;
        }
        if(wrd[count]==V)
        {
            wrd[count]=v;
        }
        if(wrd[count]==W)
        {
            wrd[count]=w;
        }
        if(wrd[count]==X)
        {
            wrd[count]=x;
        }
        if(wrd[count]==Y)
        {
            wrd[count]=y;
        }
        if(wrd[count]==Z)
        {
            wrd[count]=z;
        }

    }
    return 0;
}
